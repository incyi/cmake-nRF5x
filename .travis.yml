language: c
os: linux

before_install:
  # Save path to the git respository
  - PROJECT_PATH=$(pwd)/example
  # Save path to the toolchains folder
  - mkdir $TRAVIS_BUILD_DIR/toolchains
  - TOOLCHAIN_FOLDER=$TRAVIS_BUILD_DIR/toolchains
  # Create and save path to the gcc-arm-none-eabi compiler
  #- mkdir $TOOLCHAIN_FOLDER/gcc-arm-none-eabi
  #- ARM_NONE_EABI_TOOLCHAIN_PATH=$TOOLCHAIN_FOLDER/gcc-arm-none-eabi
  # Create and save path for nRF5 SDK
  #- mkdir $TOOLCHAIN_FOLDER/nRF5
  #- mkdir $TOOLCHAIN_FOLDER/nRF5/nRF5_SDK
  #- NRF5_SDK_PATH=$TOOLCHAIN_FOLDER/nRF5/nRF5_SDK
  # Create and save path to nrfjprog
  #- mkdir $TOOLCHAIN_FOLDER/nRF5/nrfjprog
  #- NRFJPROG=$TOOLCHAIN_FOLDER/nRF5/nrfjprog
  # Check if the folders are correctly made
  #- echo $PROJECT_PATH
  - echo $TOOLCHAIN_FOLDER
  #- echo $ARM_NONE_EABI_TOOLCHAIN_PATH
  #- echo $NRF5_SDK_PATH
  #- echo $NRFJPROG
  - sudo apt-get update
  - sudo apt-get -y install gcc-arm-none-eabi

install:
  # Install compiler in toolchains folder
  #- cd $ARM_NONE_EABI_TOOLCHAIN_PATH
  #- wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/9-2019q4/gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2
  #- tar -xvf gcc-arm-none-eabi-9-2019-q4-major-x86_64-linux.tar.bz2 -C $ARM_NONE_EABI_TOOLCHAIN_PATH
  # add compiler folder to $PATH
  #- export PATH=$PATH:ARM_NONE_EABI_TOOLCHAIN_PATH/bin
  # test gcc-arm-none-eabi compiler
  - arm-none-eabi-gcc --version
  - which arm-none-eabi-gcc
  # install nRF5 SDK in toolchains folder
  #- cd $NRF5_SDK_PATH
  #- wget https://www.nordicsemi.com/-/media/Software-and-other-downloads/SDKs/nRF5/Binaries/nRF5SDK160098a08e2.zip
  #- unzip nRF5SDK160098a08e2.zip
  # install nrfjprog
  #- cd $NRFJPROG
  #- wget https://www.nordicsemi.com/-/media/Software-and-other-downloads/Desktop-software/nRF-command-line-tools/sw/Versions-10-x-x/10-8-0/nRFCommandLineTools1080Linuxamd64tar.gz
  #- tar -xvf nRFCommandLineTools1080Linuxamd64tar.gz

script:
  - cd $PROJECT_PATH
  # cmake configure
  - cmake -H. -B"cmake-build" -G "Unix Makefiles"
  # build project
  - make -j
